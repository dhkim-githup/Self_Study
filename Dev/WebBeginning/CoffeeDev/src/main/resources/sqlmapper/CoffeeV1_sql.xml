<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.coffeedev.dao.CoffeV1Dao">

    <!-- 전체조회 Coffee V1 List  [ List , Map ]
            <![CDATA[   ]]>   : xml 파싱에 관여하지 않도록 처리
    -->
    <select id="doCoffeList" resultType="map">
        SELECT coffee_id, name, kind, price,
               DATE_FORMAT(reg_day,'%Y.%m.%d') AS reg_day, DATE_FORMAT(mod_day,'%Y.%m.%d') AS mod_day
        FROM coffee
        WHERE 1=1

          <!-- 등록기간 쿼리 -->
          <choose>
              <when test="start_date == null">
                  AND reg_day >= date_add(now(), INTERVAL-7 day)
              </when>
              <otherwise>
                      AND reg_day >= DATE_FORMAT( #{start_date},'%Y%m%d')
                      AND reg_day &lt;  date_add(DATE_FORMAT(#{end_date},'%Y%m%d'), INTERVAL +1 DAY)
              </otherwise>
          </choose>

        <!-- 메뉴명 쿼리 , null , 빈값에 대한 처리 필요
            [MySQL]title like CONCAT('%',#{keyword},'%')
            [Oracle]title like '%' || #{keyword} || '%'
            [MSSQL]title like '%' + #{keyword} + '%'
        -->
        <if test="name != null and name != ''">
            AND name like CONCAT(#{name},'%')
        </if>

        <!-- 종류 쿼리 -->
        <if test="kind != null and kind != 'ALL' ">
            AND kind = #{kind}
        </if>
        ORDER BY coffee_id, kind, price
    </select>

    <!-- 1 row 조회  -->
    <select id="doListOne" resultType="map">
        SELECT coffee_id, name, kind, price,
               DATE_FORMAT(reg_day,'%Y.%m.%d') AS reg_day, DATE_FORMAT(mod_day,'%Y.%m.%d') AS mod_day
        FROM coffee
        WHERE coffee_id = CAST(#{strCoffee_id} as INTEGER)
    </select>

    <!-- 커피메뉴 등록하기 , 파라메터는 자동으로 인식됨 , 가격은 숫자로 변환 -->
    <insert id="doInsert">
        Insert into coffee(name, kind, price)
        Values (#{strName},#{strKind}, CAST(#{strPrice} as INTEGER))
    </insert>


    <!-- 커피메뉴 수정하기 , 파라메터는 자동으로 인식됨 , 가격은 숫자로 변환 -->
    <insert id="doUpdate">
        UPDATE coffee
        SET name=#{strName}, kind=#{strKind}, price=CAST(#{strPrice} as INTEGER)
        WHERE coffee_id = CAST(#{strCoffee_id} as INTEGER)
    </insert>


    <!-- 커피메뉴 삭제 1 row -->
    <insert id="doDelete">
        Delete from  coffee
        WHERE coffee_id = CAST(#{strCoffee_id} as INTEGER)
    </insert>

</mapper>